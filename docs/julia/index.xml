<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基于Julia科学计算 on 学习笔记</title>
    <link>https://chaoskey.github.io/notes/docs/julia/</link>
    <description>Recent content in 基于Julia科学计算 on 学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>一切都是我的</copyright>
    <lastBuildDate>Sun, 01 Nov 2020 09:15:47 +0800</lastBuildDate><atom:link href="https://chaoskey.github.io/notes/docs/julia/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>有限元法求解牛顿流体（FEniCS）</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0096/</link>
      <pubDate>Wed, 18 Nov 2020 22:17:27 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0096/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在Julia环境中，使用&lt;a href=&#34;https://gitee.com/chaoskey/FenicsPy.jl&#34;&gt;FenicsPy.jl&lt;/a&gt;调用&lt;code&gt;FEniCS&lt;/code&gt;库，求解偏微分方程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;纳维-斯托克斯方程组&#34;&gt;纳维-斯托克斯方程组&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;纳维-斯托克斯方程&lt;/strong&gt;:&lt;/p&gt;

  
    

    &lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.bootcss.com/KaTeX/0.11.1/katex.min.css&#34; integrity=&#34;sha384-zB1R0rpPzHqg7Kpt0Aljp8JPLqbXI3bhnPWROx27a9N0Ll6ZP/+DiW/UqRcLbRjq&#34; crossorigin=&#34;anonymous&#34;&gt;
    
    
    &lt;script defer src=&#34;https://cdn.bootcss.com/KaTeX/0.11.1/katex.min.js&#34; integrity=&#34;sha384-y23I5Q6l+B6vatafAwxRu/0oK/79VlbSz7Q9aiSZUvyWYIYsd+qj+o24G5ZU2zJz&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
    
    
    &lt;script defer src=&#34;https://cdn.bootcss.com/KaTeX/0.11.1/contrib/auto-render.min.js&#34; integrity=&#34;sha384-kWPLUVMOks5AQFrykwIup5lo0m3iMkkHrD0uJ4H5cjeGihAutqP0yW0J6dpFiVkI&#34; crossorigin=&#34;anonymous&#34;
            onload=&#34;renderMathInElement(document.body,
                {delimiters: [{left: &#39;$$\n&#39;, right: &#39;\n$$&#39;, display: true}, {left: &#39;$$&#39;, right: &#39;$$&#39;, display: false}, 
                              {left: &#39;\\[&#39;, right: &#39;\\]&#39;, display: true}, {left: &#39;\\(&#39;, right: &#39;\\)&#39;, display: false}]});&#34;&gt;&lt;/script&gt;
    
  




&lt;span class=&#34;katex&#34;&gt;
  \[
\color{red}{\frac{\partial \boldsymbol{u}}{\partial t}+(\boldsymbol{u} \cdot \nabla)\boldsymbol{u}=\frac{1}{\rho}\nabla\cdot \boldsymbol{\sigma}+\boldsymbol{f}}
\]
&lt;/span&gt;

&lt;p&gt;其中，张量


&lt;span class=&#34;katex&#34;&gt;
  \(\boldsymbol{\sigma}\)
&lt;/span&gt;
是&lt;code&gt;应力张量&lt;/code&gt;, 取决于具体流体的特性假设，比如：&lt;code&gt;牛顿流体&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;连续性方程&lt;/strong&gt;：&lt;/p&gt;



&lt;span class=&#34;katex&#34;&gt;
  \[
\frac{\partial \rho}{\partial t}+\nabla \cdot (\rho \boldsymbol{u})=0
\]
&lt;/span&gt;</description>
    </item>
    
    <item>
      <title>科学计算环境搭建（Win10&#43;WSL2&#43;Ubuntu）</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0095/</link>
      <pubDate>Fri, 13 Nov 2020 20:09:40 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0095/</guid>
      <description>&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;系统平台： Win10_64 + WSL2 + Ubuntu&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目标：Python3.7+Julia1.5.3+JupyterLab+MatplotLib+SymPy+SciPy+FEniCS2019&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以Julia作为我主要的使用语言，确保能调用Python的库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目前FEniCS不支持Windows，所以我选择 Win10+WSL+Ubuntu&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;del&gt;目前FEniCS2019有问题（至少存在折磨我的问题），所以我选择FEniCS2018&lt;/del&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FEniCS2019的问题已经解决，所以我还是选择FEniCS2019（详细见后）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>有限元法解偏微分方程（FEniCS）</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0094/</link>
      <pubDate>Fri, 13 Nov 2020 16:27:30 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0094/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在Julia环境中，使用&lt;a href=&#34;https://gitee.com/chaoskey/FenicsPy.jl&#34;&gt;FenicsPy.jl&lt;/a&gt;调用&lt;code&gt;FEniCS&lt;/code&gt;库，求解偏微分方程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;以泊松方程第一边界条件为例&#34;&gt;以泊松方程（第一边界条件）为例&lt;/h1&gt;

  
    

    &lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.bootcss.com/KaTeX/0.11.1/katex.min.css&#34; integrity=&#34;sha384-zB1R0rpPzHqg7Kpt0Aljp8JPLqbXI3bhnPWROx27a9N0Ll6ZP/+DiW/UqRcLbRjq&#34; crossorigin=&#34;anonymous&#34;&gt;
    
    
    &lt;script defer src=&#34;https://cdn.bootcss.com/KaTeX/0.11.1/katex.min.js&#34; integrity=&#34;sha384-y23I5Q6l+B6vatafAwxRu/0oK/79VlbSz7Q9aiSZUvyWYIYsd+qj+o24G5ZU2zJz&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
    
    
    &lt;script defer src=&#34;https://cdn.bootcss.com/KaTeX/0.11.1/contrib/auto-render.min.js&#34; integrity=&#34;sha384-kWPLUVMOks5AQFrykwIup5lo0m3iMkkHrD0uJ4H5cjeGihAutqP0yW0J6dpFiVkI&#34; crossorigin=&#34;anonymous&#34;
            onload=&#34;renderMathInElement(document.body,
                {delimiters: [{left: &#39;$$\n&#39;, right: &#39;\n$$&#39;, display: true}, {left: &#39;$$&#39;, right: &#39;$$&#39;, display: false}, 
                              {left: &#39;\\[&#39;, right: &#39;\\]&#39;, display: true}, {left: &#39;\\(&#39;, right: &#39;\\)&#39;, display: false}]});&#34;&gt;&lt;/script&gt;
    
  




&lt;span class=&#34;katex&#34;&gt;
  \[
-\Delta u = f \qquad \boldsymbol{x} \in \Omega \\ u|_{\partial \Omega} =g
\]
&lt;/span&gt;

&lt;p&gt;范例而已， 本例提供的套路是通用的，大不了多看看文档。&lt;/p&gt;
&lt;p&gt;关键的地方，我特意列出相关链接。&lt;/p&gt;
&lt;p&gt;本文采用软件包： FEniCS。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>有限元之Delaunay三角剖分</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0093/</link>
      <pubDate>Fri, 06 Nov 2020 09:55:10 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0093/</guid>
      <description>&lt;p&gt;上一篇笔记，讨论了一个单独的&lt;code&gt;三角单元&lt;/code&gt;。 本篇讨论，如何将任意给定平面区域刨分成&lt;code&gt;三角单元序列&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;本文用到了 python库&lt;code&gt;scipy.spatial.Delaunay&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考文献&lt;/strong&gt;： &lt;a href=&#34;https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.Delaunay.html&#34;&gt;https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.Delaunay.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>有限元之平面三角单元</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0092/</link>
      <pubDate>Wed, 04 Nov 2020 08:56:50 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0092/</guid>
      <description>&lt;p&gt;本文是有限元法基础之一：三角单元。&lt;/p&gt;
&lt;p&gt;用
  
    

    &lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.bootcss.com/KaTeX/0.11.1/katex.min.css&#34; integrity=&#34;sha384-zB1R0rpPzHqg7Kpt0Aljp8JPLqbXI3bhnPWROx27a9N0Ll6ZP/+DiW/UqRcLbRjq&#34; crossorigin=&#34;anonymous&#34;&gt;
    
    
    &lt;script defer src=&#34;https://cdn.bootcss.com/KaTeX/0.11.1/katex.min.js&#34; integrity=&#34;sha384-y23I5Q6l+B6vatafAwxRu/0oK/79VlbSz7Q9aiSZUvyWYIYsd+qj+o24G5ZU2zJz&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
    
    
    &lt;script defer src=&#34;https://cdn.bootcss.com/KaTeX/0.11.1/contrib/auto-render.min.js&#34; integrity=&#34;sha384-kWPLUVMOks5AQFrykwIup5lo0m3iMkkHrD0uJ4H5cjeGihAutqP0yW0J6dpFiVkI&#34; crossorigin=&#34;anonymous&#34;
            onload=&#34;renderMathInElement(document.body,
                {delimiters: [{left: &#39;$$\n&#39;, right: &#39;\n$$&#39;, display: true}, {left: &#39;$$&#39;, right: &#39;$$&#39;, display: false}, 
                              {left: &#39;\\[&#39;, right: &#39;\\]&#39;, display: true}, {left: &#39;\\(&#39;, right: &#39;\\)&#39;, display: false}]});&#34;&gt;&lt;/script&gt;
    
  




&lt;span class=&#34;katex&#34;&gt;
  \(\color{red}{红色}\)
&lt;/span&gt;
标注的公式，都给了完整的符号推导（基于Julia）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考文献&lt;/strong&gt;： 微分方程数值解法（第4版）-李荣华＆刘播-高等教育出版社-2009&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>有限元法解常微分方程边值问题</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0091/</link>
      <pubDate>Mon, 02 Nov 2020 12:25:49 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0091/</guid>
      <description>&lt;p&gt;有限元法可归结为如下几个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;转换成变分问题（应该会用到边界条件）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2）对解域进行刨分（可以是不均匀）&lt;/p&gt;
&lt;p&gt;3）构造基函数（本篇采用基于线性插值的基函数）&lt;/p&gt;
&lt;p&gt;4）推导出有限元方程&lt;/p&gt;
&lt;p&gt;5）求解有限元方程&lt;/p&gt;
&lt;p&gt;6）收敛性和误差估计&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Galerkin法解常微分方程边值问题</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0090/</link>
      <pubDate>Sun, 01 Nov 2020 11:11:40 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0090/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 奇怪：这个库必须放在最前面才能一次加载成功&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
gr()

&lt;span style=&#34;color:#75715e&#34;&gt;# 解决Colab不显示输出数学公式的问题&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Markdown&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; MD, LaTeX
&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; latex(expr)
    expr &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; sympy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;latex &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; LaTeX
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>有限差分法求解一维热传导方程</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0089/</link>
      <pubDate>Sun, 01 Nov 2020 11:06:14 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0089/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 奇怪：这个库必须放在最前面才能一次加载成功&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
gr()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Plots.GRBackend()
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>平面三体问题（Julia版）</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0088/</link>
      <pubDate>Sun, 01 Nov 2020 10:15:47 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0088/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 奇怪：这个库必须放在最前面才能一次加载成功&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;span style=&#34;color:#75715e&#34;&gt;# gr()&lt;/span&gt;
pyplot()

&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; SciPy
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; LinearAlgebra
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Plots.GRBackend()
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>基于Julia的科学计算功能库整理</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0003/</link>
      <pubDate>Sun, 12 Jan 2020 19:20:35 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0003/</guid>
      <description>&lt;h2 id=&#34;线性代数&#34;&gt;线性代数&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;julia&lt;/code&gt;标准库中包括了&lt;code&gt;LinearAlgebra&lt;/code&gt;，直接&lt;code&gt;using LinearAlgebra&lt;/code&gt;就能用。详细务必移步&lt;a href=&#34;https://docs.julialang.org/en/v1/stdlib/LinearAlgebra/&#34;&gt;官方文档&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/JuliaLang/julia/blob/master/stdlib/LinearAlgebra/docs/src/index.md&#34;&gt;GitHub文档&lt;/a&gt;阅读。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Julia中的数学符号演算</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0002/</link>
      <pubDate>Sat, 11 Jan 2020 19:20:35 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0002/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;在&lt;a href=&#34;https://joistwang.gitbook.io/notes/self/0001&#34;&gt;整合Julia和Python的集成环境&lt;/a&gt;中已经配置好环境，可以在&lt;strong&gt;Jupyter&lt;/strong&gt;中进行学习研究了。&lt;/p&gt;
&lt;p&gt;由于Julia本身暂时还没有好用的符号演算库，只好借用Python的SymPy库。所以，标题应该是“Julia和Python中的数学符号演算”，但由于本文都在Julia环境下进行，单独说Julia将就也可以。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>整合Julia和Python的集成环境（Win10）</title>
      <link>https://chaoskey.github.io/notes/docs/julia/0001/</link>
      <pubDate>Wed, 08 Jan 2020 19:20:35 +0800</pubDate>
      
      <guid>https://chaoskey.github.io/notes/docs/julia/0001/</guid>
      <description>&lt;h2 id=&#34;目标&#34;&gt;目标&lt;/h2&gt;
&lt;p&gt;１） 统一利用&lt;strong&gt;Visual Studio Code&lt;/strong&gt;作为Julia和Python的ＩＤＥ&lt;/p&gt;
&lt;p&gt;２） 统一利用&lt;strong&gt;Jupyter&lt;/strong&gt;作为Julia和Python的Notebook&lt;/p&gt;
&lt;p&gt;３） 以Julia作为我主要的使用语言，确保能调用Python的库包&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
